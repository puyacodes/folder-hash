"use strict";var e=require("fs"),i=require("path"),t=require("crypto");const s=(e,i)=>("string"==typeof e||e instanceof String)&&null==i,n=e=>"boolean"==typeof e||e instanceof Boolean,o=e=>s(e)||(e=>("number"==typeof e||e instanceof Number)&&!isNaN(e))(e)||(e=>e instanceof Date&&!isNaN(e.valueOf()))(e)||n(e),a=e=>null===e,r=e=>void 0===e,l=e=>a(e)||r(e),c=(e,i=!0)=>s(e)&&(!i||""!=e.trim()),d=e=>((e,i=!0)=>a(e)||r(e)||"number"==typeof e&&isNaN(e)||s(e)&&(0==e.length||""==e.trim()&&i))(e,!1),f=e=>(e=>"object"==typeof e&&!a(e))(e)&&!o(e)&&!g(e),u=e=>"function"==typeof e&&"number"!=typeof e.nodeType,g=Array.isArray,h=e=>g(e)&&e.length>0,p={onFolderNavigating:0,onSubFolderNavigating:1,onFileNavigating:2,onFolderNavigated:3,onFolderIgnored:4,onFileIgnored:5};class m{constructor(e){this.config=Object.assign({excludeDirs:"",excludeFiles:"",includeDirs:"",includeFiles:"",sort:!0},e),s(this.config.excludeDirs)?this.config.excludeDirs=this.config.excludeDirs.split(",").filter(c):this.config.excludeDirs=[],c(this.config.includeDirs)&&this.config.excludeDirs.length&&this.config.includeDirs.split(",").forEach((e=>{const i=this.config.excludeDirs.findIndex((i=>i.toLowerCase()==e.toLowerCase()));i>=0&&this.config.excludeDirs.splice(i,1)})),s(this.config.excludeFiles)?this.config.excludeFiles=this.config.excludeFiles.split(",").filter(c):this.config.excludeFiles=[],s(this.config.includeFiles)?this.config.includeFiles=this.config.includeFiles.split(",").filter(c):this.config.includeFiles=[]}_isExcludedFile(e){let t=!1;const s=i.parse(e).ext;return this.config.excludeFiles.length&&(this.config.excludeFiles.contains(e)||s&&this.config.excludeFiles.contains(`*${s}`))&&(t=!this.config.includeFiles.length||!this.config.includeFiles.contains(e)),t}async _navigate(t,s,o,a=0){if(e.existsSync(s)){const r=e.statSync(s);if(r&&r.isDirectory()){t.name=0==a?"":i.parse(s).base;let r=await o({name:t.name,fullPath:s,dir:!0,level:a,state:p.onFolderNavigating,node:t});if(f(r))for(let e of Object.keys(r))t[e]=r[e];let l=e.readdirSync(s);this.config.sort&&l.sort();for(let r=0;r<l.length;r++){const c=l[r],d=i.join(s,c),f=e.statSync(d);if(f&&f.isDirectory())if(this.config.excludeDirs.contains(c))await o({name:c,fullPath:d,dir:!0,stat:f,level:a,state:p.onFolderIgnored,node:t});else{const e=await o({name:c,fullPath:d,dir:!0,stat:f,level:a,state:p.onSubFolderNavigating,node:t});if(void 0===e||n(e)&&e){t.dirs||(t.dirs=[]);const e={};await this._navigate(e,d,o,a+1),t.dirs.push(e)}}else if(this._isExcludedFile(c))await o({name:c,fullPath:d,dir:!1,stat:f,level:a,state:p.onFileIgnored,node:t});else{const e=await o({name:c,fullPath:d,dir:!1,stat:f,level:a,state:p.onFileNavigating,node:t});void 0===e||n(e)&&e?(t.files||(t.files=[]),t.files.push(c)):void 0!==e&&e&&!n(e)&&(t.files||(t.files=[]),t.files.push(e))}}if(r=await o({name:t.name,dir:!0,level:a,state:p.onFolderNavigated,node:t}),f(r))for(let e of Object.keys(r))t[e]=r[e]}}}async navigate(e,t){const s={};return this.config.debugMode&&console.log(this.config),i.isAbsolute(e)||(e=i.join(process.cwd(),e)),u(t)||(t=()=>{}),await this._navigate(s,e,t),s}}const y={MissingSubDir:"missing-subdir",MissingFiles:"missing-files",FileMismatch:"file-mismatch",MissingFile:"missing-file"};async function F(t,s){await e.promises.mkdir(s,{recursive:!0});const n=await e.promises.readdir(t,{withFileTypes:!0});for(const o of n){const n=i.join(t,o.name),a=i.join(s,o.name);o.isDirectory()?await F(n,a):await e.promises.copyFile(n,a)}}async function w(t,s){await e.promises.mkdir(s,{recursive:!0});const n=await e.promises.readdir(t);for(const o of n){const n=i.join(t,o),a=i.join(s,o);(await e.promises.lstat(n)).isFile()&&await e.promises.copyFile(n,a)}}function x(t,s){const n=i.dirname(s);e.mkdirSync(n,{recursive:!0}),e.copyFileSync(t,s)}class v{static excludeDirs="node_modules,.git,tests,packages,wwwroot,__tests__,coverage,.vscode,.idea,build,publish,.vs";static excludeFiles="thumbs.db,package.json,packages.config,.env,.gitignore,.ds_store,*.log,*.test.js,*.spec.js,*.bak,*.tmp,sync.bat,sync.sh";static _getConfig(e){const i={excludeDirs:v.excludeDirs,excludeFiles:v.excludeFiles};return f(e)?(c(e.excludeDirs)&&(e.excludeDirs.startsWith(",")?i.excludeDirs+=e.excludeDirs:i.excludeDirs=e.excludeDirs),c(e.excludeFiles)&&(e.excludeFiles.startsWith(",")?i.excludeFiles+=e.excludeFiles:i.excludeFiles=e.excludeFiles),c(e.includeDirs)&&(i.includeDirs=e.includeDirs),c(e.includeFiles)&&(i.includeFiles=e.includeFiles)):e={},i.sort=e.sort,i.debugMode=e.debugMode,i}static async getHash(i,s,n){const o=new m(v._getConfig(n));u(s)||(s=()=>{});const a=await o.navigate(i,(async i=>{s(i);const{name:n,fullPath:o,dir:a,state:r,node:l}=i;if(!a)return{name:n,hash:await(c=o,new Promise(((i,s)=>{const n=t.createHash("md5"),o=e.createReadStream(c);o.on("data",(e=>{n.update(e)})),o.on("end",(()=>{i(n.digest("hex"))})),o.on("error",(e=>{s(e)}))})))};var c,d;if(r==p.onFolderNavigated){let e=[];if(l.dirs&&l.dirs.length)for(let i of l.dirs)e.push(i.hash);if(l.files&&l.files.length)for(let i of l.files)e.push(i.hash);return{hash:e.length?(d=e.join(""),t.createHash("md5").update(d).digest("hex")):""}}}));return a}static async diff(t,n,o,a,r){let l,d;if(s(o)||(o="."),s(t)){if(!e.existsSync(t))throw"'from' not found";if(e.statSync(t).isDirectory())l=await v.getHash(t,null,r);else try{l=JSON.parse(e.readFileSync(t,"utf-8"))}catch(e){throw`Reading 'from' file failed.\n${e}`}}else{if(!f(t))throw"Invalid 'from'";l=t}if(s(n)){if(!e.existsSync(n))throw"'to' not found";if(e.statSync(n).isDirectory())d=await v.getHash(n,null,r),a=c(a)?a:i.parse(n).dir;else{try{d=JSON.parse(e.readFileSync(n,"utf-8"))}catch(e){throw`Reading 'to' file failed.\n${e}`}a=c(a)?a:i.parse(n).dir}}else{if(!f(n))throw"Invalid 'to'";if(d=n,!c(a))throw"target path required"}let g=[];return u(r.onChange)||(r.onChange=()=>{}),function e(i,t,s,n){if(i.hash!=t.hash){const o=s+(i.name?"/"+i.name:""),a=n+(t.name?"/"+t.name:"");if(h(i.dirs)){const s=h(t.dirs)?t.dirs:[];if(h(t.dirs))for(let t of i.dirs){const i=s.find((e=>e.name.toLowerCase()==t.name.toLowerCase()));if(i)e(t,i,o,a);else{const e={from:`${o}/${t.name}`,to:`${a}/${t.name}`,dir:!0};r.onChange({path:e.to,name:t.name,type:y.MissingSubDir}),g.push(e)}}}if(h(i.files))if(h(t.files))for(let e of i.files){const i=t.files.find((i=>i.name.toLowerCase()==e.name.toLowerCase()));if(i){if(e.hash!=i.hash){const i={from:`${o}/${e.name}`,to:`${a}/${e.name}`};r.onChange({path:i.to,name:e.name,type:y.FileMismatch}),g.push(i)}}else{const i={from:`${o}/${e.name}`,to:`${a}/${e.name}`};r.onChange({path:i.to,name:e.name,type:y.MissingFile}),g.push(i)}}else{const e={from:`${o}`,to:`${a}/`,all:!0};r.onChange({path:e.to,name:i.name,type:y.MissingFiles}),g.push(e)}}}(l,d,o,a),g}static async apply(e,i,t,s,n){const o=await v.diff(e,i,t,s,n);for(let e of o)e.dir?await F(e.from,e.to):e.all?await w(e.from,e.to):x(e.from,e.to);return o}}function D(e,...i){let t=!1;if(c(e))if(i.length){t=!0;const s=e.toLowerCase();for(let e of i){const i=l(e)?"":e.toString().toLowerCase();if(!s.includes(i)){t=!1;break}}}else t=!0;return t}void 0===String.prototype.contains&&(String.prototype.contains=function(...e){return D(this,...e)}),void 0===String.prototype.containsAll&&(String.prototype.containsAll=function(...e){return D(this,...e)}),void 0===String.prototype.containsAny&&(String.prototype.containsAny=function(...e){return function(e,...i){let t=!0;if(c(e)&&i.length){t=!1;const s=e.toLowerCase();for(let e of i){const i=l(e)?"":e.toString().toLowerCase();if(s.includes(i)){t=!0;break}}}return t}(this,...e)}),void 0===Array.prototype.contains&&(Array.prototype.contains=function(e){let i=!1;for(let t of this)if((t||"").toString().equals(e)){i=!0;break}return i}),void 0===String.prototype.equals&&(String.prototype.equals=function(...e){return function(e,i,t=!0){let n=!1;return n=s(e)&&s(i)?t?e.toLowerCase()==i.toLowerCase():e==i:d(e)&&d(i),n}(this,...e)}),exports.FolderChangeType=y,exports.FolderNavigationEvent=p,exports.FolderNavigator=m,exports.FolderUtil=v;
